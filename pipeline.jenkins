pipeline {
    agent any

    stages {
        stage('Clone Repository') {
            steps {
                script {
                    if (!fileExists('drieonline_api/.git')) {
                        sshagent(['992e4ec2-bb97-41ab-a711-41fda82486d1']) {
                            sh 'ssh-keyscan github.com >> ~/.ssh/known_hosts'
                            sh 'git clone git@github.com:doutorie/drieonline_api.git'
                        }
                    } else {
                        echo 'O repositório já foi clonado. Pulando a clonagem.'
                    }
                }
            }
        }
        stage('Run Script') {
            steps {
                dir('drieonline_api') {
                    script {
                        if (!fileExists('.env')) {
                            if (fileExists('instalar-desenvolvimento.sh')) {
                                sh './instalar-desenvolvimento.sh'
                            } else {
                                error 'O script instalar-desenvolvimento.sh não foi encontrado!'
                            }
                        } else {
                            echo 'O arquivo .env já existe. Pulando a execução do script.'
                        }
                    }
                }
            }
        }
        stage('Update MONGO_PORTA') {
            steps {
                dir('drieonline_api') {
                    script {
                        sh "sed -i 's/MONGO_PORTA=27017/MONGO_PORTA=27018/' .docker/.env"
                        echo 'MONGO_PORTA alterada para 27018 no arquivo .docker/.env.'
                    }
                }
            }
        }
        stage('Check and Stop Conflicting Process') {
            steps {
                script {
                    // Verifica o processo que está utilizando a porta 27018 e encerra
                    def pid = sh(script: "lsof -t -i :27018 || true", returnStdout: true).trim()
                    if (pid) {
                        echo "A porta 27018 está em uso pelo processo com PID ${pid}. Encerrando o processo."
                        sh "kill -9 ${pid}"
                    } else {
                        echo 'A porta 27018 está livre.'
                    }
                }
            }
        }
        stage('Start Docker') {
            steps {
                dir('drieonline_api') {
                    sh 'docker-compose --env-file .docker/.env up -d'
                }
            }
        }
        stage('Install Dependencies') {
            steps {
                // Remover a flag -t para evitar o erro de TTY
                sh 'docker exec -i api_php composer install'
            }
        }
    }

    post {
        success {
            echo 'Pipeline concluída com sucesso!'
        }
        failure {
            echo 'Falha em alguma etapa do pipeline.'
        }
    }
}
